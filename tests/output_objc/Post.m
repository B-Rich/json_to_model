// Generated by json_to_model

#import "Post.h"

@implementation Post  {

}

- (id)initWithJSONDictionary:(NSDictionary *)dictionary {

    self = [super init];
    if (![dictionary isKindOfClass:[NSDictionary class]])
        return nil;

    if (self) {
 
        self.author = (dictionary[@"author"] == [NSNull null] || dictionary[@"author"] == nil) ? nil : [[User alloc] initWithJSONDictionary: dictionary[@"author"]];
  
        self.replies = [[NSMutableArray alloc] initWithCapacity:16];
        for (NSDictionary *_ in dictionary[@"replies"]) {
            
                [((NSMutableArray *)self.replies) addObject:[[Reply alloc] initWithJSONDictionary:_]];
            
        }
  
        self.title = (dictionary[@"title"] != [NSNull null]) ? dictionary[@"title"] : nil;
  
        self.summary = (dictionary[@"summary"] != [NSNull null]) ? dictionary[@"summary"] : nil;
  
        self.time = (dictionary[@"time"] != [NSNull null]) ? [dictionary[@"time"] integerValue] : 0;
  
        self.ID = (dictionary[@"id"] != [NSNull null]) ? [dictionary[@"id"] integerValue] : 0;
 
    }
    return self;
}

- (id)initWithJSONData:(NSData *)data {
    self = [super init];
    if (self) {
        NSError *error = nil;
        id result = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:&error];
        if (result) {
            self = [self initWithJSONDictionary:result];
        } else {
            return nil;
        }
    }
    return self;
}

- (NSDictionary *)JSONDictionary {

    NSMutableDictionary *dictionary = [[NSMutableDictionary alloc] init];

 
    dictionary[@"author"] = (self.author == nil) ? [NSNull null] : self.author;
  
    {
        NSMutableArray *_ = [[NSMutableArray alloc] init];
        dictionary[@"replies"] = _;
        
        for (Reply *__ in self.replies) {
            
                [_ addObject:[__ JSONDictionary]];
            
        }
        
    }
  
    dictionary[@"title"] = (self.title != nil) ? self.title : [NSNull null];
  
    dictionary[@"summary"] = (self.summary != nil) ? self.summary : [NSNull null];
  
    dictionary[@"time"] = @(self.time);
  
    dictionary[@"id"] = @(self.ID);
 
    return dictionary;
}


- (NSData *)JSONData {
    NSError *error = nil;
    NSData *data = [NSJSONSerialization dataWithJSONObject:[self JSONDictionary] options:0 error:&error];
    if (error) {
        @throw error;
    }
    return data;
}


@end